//======================================================================================================================
/*
  Kyosu - Complex Without Complexes
  Copyright : KYOSU Contributors & Maintainers
  SPDX-License-Identifier: BSL-1.0
*/
//======================================================================================================================
#include <kyosu/kyosu.hpp>
#include <test.hpp>

TTS_CASE_WITH ( "Check kyosu::sph_bessel_i1n over real"
              , kyosu::scalar_real_types
              , tts::generate(tts::randoms(-10,10))
              )
<typename T>(T )
{
  if constexpr(sizeof(T) == 8)
  {
    std::array<T, 16> re{-5.2999999999999998e+00, -4.5999999999999996e+00, -3.8999999999999999e+00, -3.2000000000000002e+00, -2.5000000000000000e+00, -1.7999999999999998e+00, -1.1000000000000005e+00, -4.0000000000000036e-01, 2.9999999999999982e-01, 1.0000000000000000e+00, 1.7000000000000002e+00, 2.3999999999999995e+00, 3.0999999999999988e+00, 3.7999999999999998e+00, 4.4999999999999991e+00, 5.2000000000000002e+00};
    std::array<T, 16> im{8.0000000000000000e+00, -7.0000000000000000e+00, 6.0000000000000000e+00, -5.0000000000000000e+00, 4.0000000000000000e+00, -3.0000000000000000e+00, 2.0000000000000000e+00, -1.0000000000000000e+00, -0.0000000000000000e+00, 1.0000000000000000e+00, -2.0000000000000000e+00, 3.0000000000000000e+00, -4.0000000000000000e+00, 5.0000000000000000e+00, -6.0000000000000000e+00, 7.0000000000000000e+00};
    {
      std::array<T, 16> reres0{7.7706189084700474e+00, 5.7193348954956411e+00, 9.9651419983548073e-01, -1.3562427634458576e+00, -1.2786706440683431e+00, -3.2086069648420901e-01, 4.6505781935223922e-01, 8.6074414214508577e-01, 1.0150676448238098e+00, 9.6671074810035795e-01, 4.7487788451853485e-01, -7.2053339349585488e-01, -2.1909908780305312e+00, -2.1079169900772778e+00, 2.1152290966576488e+00, 1.0154509786953152e+01};
      std::array<T, 16> imres0{-6.9698029235714092e+00, -1.5982850495762253e+00, 3.3035431065212375e+00, -1.5627342120843337e+00, -1.8950023844531727e-01, 7.7839373841130077e-01, -5.3369453536091727e-01, 1.2236722808607153e-01, 0.0000000000000000e+00, 3.3174683331562105e-01, -9.5413188180798625e-01, 1.2274152539491650e+00, -1.1199496047458246e-01, -2.8693859068716674e+00, 5.6153371971630630e+00, -2.2178922189196260e+00};
      std::array<T, 16> reres1{-6.7174528679796257e+00, -5.5036519799541068e+00, -1.3098238628283609e+00, 1.0047646742110703e+00, 1.1639277971364117e+00, 4.9424086716566795e-01, -1.6557649475684527e-02, -9.7080721799298941e-02, 1.0090289768350588e-01, 2.6208507473901876e-01, 1.3771516732295430e-02, -8.7005346095573977e-01, -1.9415108978882807e+00, -1.5377246143859755e+00, 2.5461644883125758e+00, 9.6642158761147634e+00};
      std::array<T, 16> imres1{7.2434985699405363e+00, 9.2405428066530826e-01, -2.9370454059224973e+00, 1.6113493268362018e+00, -4.5039559309533850e-02, -6.2196029018627774e-01, 5.8880997583441919e-01, -3.1547053555014831e-01, 0.0000000000000000e+00, 3.9506579770822658e-01, -8.3764199676086581e-01, 8.9755809983712842e-01, 2.3504424348042030e-01, -2.8588922477687770e+00, 4.9413752253773460e+00, -1.1320604331709858e+00};
      std::array<T, 16> reres6{-2.6240029171547561e+00, -5.1076195004248492e-01, 1.2968488456394686e-01, 1.3990664186260438e-01, 5.3442223694414565e-02, 1.0867465917187520e-02, 9.1904729456308994e-04, 7.1102071274073375e-06, 5.4108106474652957e-09, 3.9446343583993648e-06, 1.5302374589411690e-03, 1.9752158517365788e-02, 1.0456001605232421e-01, 3.0094545968908643e-01, 3.9527685917385558e-01, -5.5947069481577105e-01};
      std::array<T, 16> imres6{-1.3782512229893624e+00, 1.2635768993261309e+00, -5.6286102987787712e-01, 1.5843241471028197e-01, -2.7888540684483137e-02, 2.9738694621436607e-03, -2.5713535324299396e-04, 8.6945533993184342e-06, 0.0000000000000000e+00, -5.9084004894842560e-05, 1.7696008192200146e-03, -8.8585161213433159e-03, -3.0090818333100081e-03, 1.8254279393427686e-01, -8.6690629805255193e-01, 2.1924764971833897e+00};
      for(int i=0; i < 16; ++i)
      {
        auto c = kyosu::complex(re[i], im[i]);
        auto res0 = kyosu::complex(reres0[i], imres0[i]);
        TTS_RELATIVE_EQUAL(kyosu::sph_bessel_i1n(0, c), res0, 1.0e-7) << i <<  " <- " << c << '\n';
        TTS_RELATIVE_EQUAL(kyosu::sph_bessel_i1n(0, c), kyosu::sph_bessel_i1_0(c), 1.0e-7) << i <<  " <- " << c << '\n';
        auto res1 = kyosu::complex(reres1[i], imres1[i]);
        TTS_RELATIVE_EQUAL(kyosu::sph_bessel_i1n(1, c), res1, 1.0e-7) << i <<  " <- " << c << '\n';
        TTS_RELATIVE_EQUAL(kyosu::sph_bessel_i1n(1, c), kyosu::sph_bessel_i1_1(c), 1.0e-7) << i <<  " <- " << c << '\n';
        auto res6 = kyosu::complex(reres6[i], imres6[i]);
        TTS_RELATIVE_EQUAL(kyosu::sph_bessel_i1n(6, c), res6, 1.0e-7) << i <<  " <- " << c << '\n';
      }
    }
    {
      std::array<T, 16> reres0{-7.7701480965979615e+00, -5.7191728632529424e+00, -9.9865703486958179e-01, 1.3496468508128983e+00, 1.2735311974235841e+00, 3.5064348468508577e-01, -3.1961958268284379e-01, -4.9937803640628725e-01, 3.4844617137628719e+00, 9.1131386544700832e-01, 4.0790158455486170e-01, -7.3773871722556050e-01, -2.1892302215898161e+00, -2.1045860265728922e+00, 2.1164135150144610e+00, 1.0154460554701284e+01};
      std::array<T, 16> imres0{6.9695817953414272e+00, 1.5994741138540221e+00, -3.3053895440682828e+00, 1.5608253671722003e+00, 2.0612597652806902e-01, -8.1507228516936348e-01, 5.2296512942223727e-01, 3.8435468075214141e-01, 0.0000000000000000e+00, 7.7583840315858354e-02, -9.3521361215077858e-01, 1.2435876926532230e+00, -1.2072100015852272e-01, -2.8681235230153779e+00, 5.6162266381272072e+00, -2.2185229272143054e+00};
      std::array<T, 16> reres1{6.7179699859518553e+00, 5.5039432710089606e+00, 1.3077341730520082e+00, -1.0122303696188917e+00, -1.1726336064302898e+00, -4.6906809706222657e-01, 1.9682138944905253e-01, 1.0198850612740733e+00, -1.0599804734385765e+01, 4.7226189521892448e-01, 1.0276468886616588e-01, -8.5333760464885822e-01, -1.9448475868827635e+00, -1.5415365510292587e+00, 2.5449801901900613e+00, 9.6643265361121937e+00};
      std::array<T, 16> imres1{-7.2436915244778488e+00, -9.2280342234562251e-01, 2.9348072847855646e+00, -1.6124956501976551e+00, 6.2609412386795293e-02, 5.7258813650279483e-01, -5.4597429025558630e-01, 6.8540163214395333e-01, 0.0000000000000000e+00, 7.4861184588119567e-01, -8.4178645778090444e-01, 8.7525897928490914e-01, 2.4455154428335113e-01, -2.8598539785097512e+00, 4.9402882911780104e+00, -1.1313911260155840e+00};
      std::array<T, 16> reres6{2.6246088813895847e+00, 5.1558271591018912e-01, -1.1332387711202019e-01, -1.0055046114692631e-01, 2.6616265103540510e-03, -2.6736332326717582e-01, -6.2624240645191396e+00, 3.1625262777005564e+03, 4.7336904824867837e+07, 7.0532075943362565e+02, 1.2546826026901138e+01, 7.5732241106251996e-01, 1.5046516286344094e-01, 2.9063629792862511e-01, 3.8744481722959184e-01, -5.6229910703386254e-01};
      std::array<T, 16> imres6{1.3800676683211495e+00, -1.2660426058258256e+00, 5.5883548768306357e-01, -1.1196873227250402e-01, -2.4894865246898401e-01, 2.0323483453640900e+00, -3.5895780247972894e+01, 5.5916670355854685e+03, 0.0000000000000000e+00, 5.8750719298833349e+02, 1.1624042874403822e+00, -5.7381216048713535e-01, 1.3154820430720915e-01, 1.5222870262636137e-01, -8.6241979472821317e-01, 2.1932193362333159e+00};

      for(int i=0; i < 16; ++i)
      {
        auto c = kyosu::complex(re[i], im[i]);
        auto res0 = kyosu::complex(reres0[i], imres0[i]);
        TTS_RELATIVE_EQUAL(kyosu::sph_bessel_i2n(0, c), res0, 1.0e-7) << i <<  " <- " << c << '\n';
        TTS_RELATIVE_EQUAL(kyosu::sph_bessel_i2n(0, c), kyosu::sph_bessel_i2_0(c), 1.0e-7) << i <<  " <- " << c << '\n';
        auto res1 = kyosu::complex(reres1[i], imres1[i]);
        TTS_RELATIVE_EQUAL(kyosu::sph_bessel_i2n(1, c), res1, 1.0e-7) << i <<  " <- " << c << '\n';
        TTS_RELATIVE_EQUAL(kyosu::sph_bessel_i2n(1, c), kyosu::sph_bessel_i2_1(c), 1.0e-7) << i <<  " <- " << c << '\n';
        auto res6 = kyosu::complex(reres6[i], imres6[i]);
        TTS_RELATIVE_EQUAL(kyosu::sph_bessel_i2n(6, c), res6, 1.0e-7) << i <<  " <- " << c << '\n';
      }
    }
  }
};


TTS_CASE_WITH ( "Check kyosu::sph_bessel_inn over real"
              , kyosu::real_types
              , tts::generate(tts::randoms(-10,10),
                              tts::randoms(-10,10)
                             )
              )
<typename T>(T a0, T a1)
{
  if constexpr(sizeof(eve::underlying_type_t<T>) == 8)
  {
    using u_t = eve::underlying_type_t<T>;
    auto c =  kyosu::complex(a0, a1);
    auto cm = -c;
    auto zer =   kyosu::complex(T(0), T(0));
    //   auto one =   kyosu::complex(T(1), T(0));

    using kyosu::sph_bessel_i1n;
    using kyosu::sph_bessel_i2n;

    for(int i=1; i < 4 ; ++i)
    {
      auto i1nc = sph_bessel_i1n(i, c);
      auto i2nc = sph_bessel_i2n(i, c);
      TTS_IEEE_EQUAL(i1nc, eve::sign_alternate(u_t(i))*sph_bessel_i1n(i, cm)) << "c " << c << "\n";
      TTS_IEEE_EQUAL(i2nc, eve::sign_alternate(u_t(i+1))*sph_bessel_i2n(i, cm)) << "c " << c << "\n";
      TTS_EXPECT(eve::all(kyosu::is_eqz(sph_bessel_i1n(i, zer)))) << i << sph_bessel_i1n(i, zer) << '\n';
      TTS_EXPECT(eve::all(kyosu::is_nan(sph_bessel_i2n(i, zer)))) << i << sph_bessel_i2n(i, zer) << '\n';
    }
  }
};
